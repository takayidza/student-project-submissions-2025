// @ts-nocheck
const{createApp:createApp,ref:ref,computed:computed,onMounted:onMounted}=Vue,api=createAuthenticatedApi();createApp({setup(){const e=ref(!1),a=ref("dashboard"),t=ref("Dashboard"),i=(ref([]),ref([])),r=ref([]),l=ref([]),c=ref([]),s=(ref([]),ref("")),n=ref(!1),u=ref(null),o=ref({full_name:"",phone_number:"",email:"",city:"",home_address:""}),d=ref({device_id:"",vehicle_id:"",is_active:!0}),v=ref({vehicle_name:"",vehicle_type:"",reg:"",model:"",year:(new Date).getFullYear(),colour:"",user_id:""}),h=ref(""),f=ref("all"),_=ref(!1),p=ref(null),m=ref(!1),g=ref(null),w=ref(""),y=ref((new Date).toISOString().split("T")[0]),D=ref(""),V=ref("all"),U=ref(!1),b=ref(null),E=ref("all"),I=ref(""),C=ref(!1),N=ref(null),M={async getUsers(){try{return(await api.get("/api/v1/users")).data}catch(e){throw e}},async getUser(e){try{return(await api.get(`/api/v1/users/${e}`)).data}catch(e){throw e}},async addUser(e){try{return(await api.post("/api/v1/users",{name:e.name,phone:e.phone,email:e.email,city:e.city,address:e.address})).data}catch(e){throw e}},async updateUser(e,a){try{return(await api.put(`/api/v1/users/${e}`,a)).data}catch(e){throw e}},async deleteUser(e){try{return(await api.delete(`/api/v1/users/${e}`)).data}catch(e){throw e}},async addDevice(e){try{return(await api.post("/api/v1/devices",e)).data}catch(e){throw e}},async updateDevice(e,a){try{return(await api.put(`/api/v1/devices/${e}`,a)).data}catch(e){throw e}},async getDevices(){try{return(await api.get("/api/v1/devices")).data}catch(e){throw e}},async addVehicle(e){try{return(await api.post("/api/v1/vehicles",e)).data}catch(e){throw e}},async updateVehicle(e,a){try{return(await api.put(`/api/v1/vehicles/${e}`,a)).data}catch(e){throw e}},async getVehicles(){try{return(await api.get("/api/v1/vehicles")).data}catch(e){throw e}}},A=computed((()=>i.value.filter((e=>e.is_active)).length)),L=computed((()=>l.value.filter((e=>"unread"===e.status)).length)),S=computed((()=>{let e=[...l.value];if(I.value){const a=I.value.toLowerCase();e=e.filter((e=>e.message.toLowerCase().includes(a)||Y(e.vehicle_id).toLowerCase().includes(a)))}if("all"!==E.value)switch(E.value){case"unread":e=e.filter((e=>"unread"===e.status));break;case"high":e=e.filter((e=>"high"===e.severity));break;case"medium":e=e.filter((e=>"medium"===e.severity));break;case"low":e=e.filter((e=>"low"===e.severity))}return e.sort(((e,a)=>new Date(a.timestamp)-new Date(e.timestamp)))})),k=computed((()=>i.value.length>0?Math.round(A.value/i.value.length*100):0)),P=computed((()=>{const e=new Date;return e.setDate(e.getDate()-30),i.value.filter((a=>!a.last_maintenance||new Date(a.last_maintenance)<e)).length})),x=computed((()=>{let e=[...i.value];if(D.value){const a=D.value.toLowerCase();e=e.filter((e=>e.device_serial.toLowerCase().includes(a)||Y(e.vehicle_id).toLowerCase().includes(a)))}if("all"!==V.value){const a=new Date;switch(a.setDate(a.getDate()-30),V.value){case"active":e=e.filter((e=>e.is_active));break;case"inactive":e=e.filter((e=>!e.is_active));break;case"maintenance":e=e.filter((e=>!e.last_maintenance||new Date(e.last_maintenance)<a))}}return e})),$=computed((()=>{if(!i.value||!r.value)return 0;const e=new Set(i.value.map((e=>e.vehicle_id)));return r.value.filter((a=>e.has(a.vehicle_id))).length})),T=computed((()=>r.value&&$.value&&r.value.length>0?Math.round($.value/r.value.length*100):0)),F=computed((()=>Math.floor(.2*r.value.length))),Q=computed((()=>{if(!r.value)return[];let e=[...r.value];if(h.value){const a=h.value.toLowerCase();e=e.filter((e=>!!e&&(e.vehicle_name?.toLowerCase().includes(a)||e.reg?.toLowerCase().includes(a)||e.model?.toLowerCase().includes(a))))}if("all"!==f.value){const a=new Set(i.value.map((e=>e.vehicle_id)));e=e.filter((e=>{if(!e)return!1;switch(f.value){case"active":return!0===e.is_active;case"inactive":return!1===e.is_active;case"connected":return a.has(e.vehicle_id);case"not_connected":return!a.has(e.vehicle_id);default:return!0}}))}return e})),j=computed((()=>{if(!c.value||!r.value)return r.value||[];const e=new Set(c.value.filter((e=>e?.vehicleId)).map((e=>e.vehicleId)));return r.value.filter((a=>!e.has(a.vehicle_id)))})),O=computed((()=>{if(!c.value||0===c.value.length)return[];const e=[...c.value];if(console.log("All Users:",e),!s.value)return e;const a=s.value.toLowerCase();return e.filter((e=>!!e&&(e.full_name&&e.full_name.toLowerCase().includes(a)||e.email&&e.email.toLowerCase().includes(a)||e.phone_number&&e.phone_number.includes(a))))})),R=()=>{t.value={dashboard:"Dashboard",iot:"IoT Devices",vehicles:"Vehicles",alerts:"Alerts",users:"Users Management"}[a.value]||"Dashboard"},Y=e=>{const a=r.value.find((a=>a.vehicle_id===e));return a?a.vehicle_name:"Unknown Vehicle"},z=e=>{const a=l.value.findIndex((a=>a.id===e.id));-1!==a&&(l.value[a].status="read")},W=async()=>{try{const e=await M.getUsers();console.log("Users fetched:",e),c.value=e}catch(e){console.error("Error fetching users:",e),alert("Error loading users. Please refresh the page.")}},q=async()=>{try{const e=await M.getVehicles();console.log("Vehicles fetched:",e),r.value=e}catch(e){console.error("Error fetching vehicles:",e),alert("Error loading vehicles. Please refresh the page.")}},B=async()=>{try{const e=await M.getDevices();console.log("Devices fetched:",e),i.value=e}catch(e){console.error("Error fetching devices:",e),alert("Error loading devices. Please refresh the page.")}};return onMounted((()=>{W(),q(),B()})),{sidebarCollapsed:e,activeTab:a,pageTitle:t,devices:i,vehicles:r,newDevice:d,newVehicle:v,vehicleSearchQuery:h,vehicleFilter:f,showVehicleEditModal:_,editingVehicle:p,showAssignIotModal:m,assigningVehicle:g,selectedIotDevice:w,iotInstallationDate:y,deviceSearchQuery:D,deviceFilter:V,showEditModal:U,editingDevice:b,notifications:l,notificationFilter:E,notificationSearchQuery:I,showNotificationModal:C,selectedNotification:N,unreadNotifications:L,filteredNotifications:S,users:c,showUserEditModal:n,editingUser:u,userSearchQuery:s,newUser:o,activeDevices:A,activeDevicesPercentage:k,maintenanceDueCount:P,filteredDevices:x,vehiclesWithIot:$,iotConnectionPercentage:T,vehicleMaintenanceDue:F,filteredVehicles:Q,unassignedVehicles:j,filteredUserz:O,toggleSidebar:()=>{e.value=!e.value},setActiveTab:e=>{a.value=e,R()},updatePageTitle:R,formatDate:e=>e?new Date(e).toLocaleDateString():"N/A",getVehicleName:Y,hasIotDevice:e=>!!i.value&&i.value.some((a=>a.vehicle_id===e)),getVehicleOwner:e=>{if(!e||!c.value)return"No owner assigned";const a=c.value.find((a=>a.user_id===e));return a?a.full_name:"No owner assigned"},addNewDevice:async()=>{try{if((await M.addDevice(d.value)).status){const e=Math.max(...i.value.map((e=>e.association_id)),0)+1;i.value.push({association_id:e,device_serial:d.value.device_id,vehicle_id:d.value.vehicle_id,is_active:d.value.is_active}),d.value={device_id:"",vehicle_id:"",is_active:!0},alert("Device added successfully")}}catch(e){console.error("Error adding device:",e),alert("Error adding device. Please try again.")}},updateDevice:async()=>{if(b.value?.device_id)try{const e={device_id:b.value.device_serial,vehicle_id:b.value.vehicle_id,is_active:b.value.is_active,installation_date:b.value.installation_date,last_maintenance:b.value.last_maintenance};(await M.updateDevice(b.value.device_id,e)).status&&(await B(),U.value=!1,alert("Device updated successfully"))}catch(e){console.error("Error updating device:",e),alert("Error updating device. Please try again.")}},addNewVehicle:async()=>{try{console.log("Submitting vehicle data:",v.value);if((await M.addVehicle(v.value)).status){const e=Math.max(...r.value.map((e=>e.vehicle_id)),0)+1;r.value.push({vehicle_id:e,...v.value,is_active:!0}),v.value={reg:"",make:"",model:"",year:(new Date).getFullYear(),colour:"",user_id:""},alert("Vehicle added successfully")}}catch(e){console.error("Error adding vehicle:",e),alert("Error adding vehicle. Please try again.")}},updateVehicle:async()=>{if(p.value?.vehicle_id)try{const e={registration_number:p.value.registration_number,make:p.value.make,model:p.value.model,year:p.value.year,color:p.value.color,user_id:p.value.user_id};if((await M.updateVehicle(p.value.vehicle_id,e)).status){const a=r.value.findIndex((e=>e.vehicle_id===p.value.vehicle_id));-1!==a&&(r.value[a]={...r.value[a],...e}),_.value=!1,alert("Vehicle updated successfully"),await q()}}catch(e){console.error("Error updating vehicle:",e),alert("Error updating vehicle. Please try again.")}},markAsRead:z,markAllAsRead:()=>{l.value=l.value.map((e=>({...e,status:"read"})))},viewNotificationDetails:e=>{N.value=e,C.value=!0,z(e)},deleteNotification:e=>{const a=l.value.findIndex((a=>a.id===e.id));-1!==a&&l.value.splice(a,1)},toggleVehicleStatus:e=>{if(!e||void 0===e.vehicle_id)return void console.error("Invalid vehicle object:",e);const a=r.value.findIndex((a=>a.vehicle_id===e.vehicle_id));-1!==a&&(r.value[a].is_active=!r.value[a].is_active,alert(`Vehicle ${r.value[a].is_active?"activated":"deactivated"} successfully`))},toggleDeviceStatus:e=>{if(!e||void 0===e.association_id)return void console.error("Invalid device object:",e);const a=i.value.findIndex((a=>a.association_id===e.association_id));-1!==a&&(i.value[a].is_active=!i.value[a].is_active,alert(`Device ${i.value[a].is_active?"activated":"deactivated"} successfully`))},editVehicle:e=>{e?(p.value={vehicle_id:e.vehicle_id,registration_number:e.registration_number,make:e.make,model:e.model,year:e.year,color:e.color,user_id:e.user_id,is_active:e.is_active},_.value=!0):console.error("No vehicle provided to editVehicle function")},editDevice:e=>{e?(b.value={device_id:e.device_id,device_serial:e.device_serial,vehicle_id:e.vehicle_id,installation_date:e.installation_date,last_maintenance:e.last_maintenance,is_active:e.is_active},U.value=!0):console.error("No device provided to editDevice function")},addNewUser:async()=>{try{(await M.addUser({name:o.value.name,phone:o.value.phone,email:o.value.email,city:o.value.city,address:o.value.address})).status&&(await W(),o.value={name:"",phone:"",email:"",city:"",address:""},alert("User added successfully"))}catch(e){console.error("Error adding user:",e),alert("Error adding user. Please try again.")}},getUserVehicles:e=>e&&r.value?r.value.filter((a=>a.vehicle_id===e.vehicleId)):[],editUser:e=>{u.value={...e},n.value=!0},updateUser:async()=>{if(u.value?.user_id)try{const e={full_name:u.value.full_name,email:u.value.email,phone_number:u.value.phone_number,city:u.value.city,home_address:u.value.home_address},a=await M.updateUser(u.value.user_id,e);if(a.error)throw new Error(a.error);await W(),n.value=!1,alert("User updated successfully")}catch(e){console.error("Error updating user:",e),alert("Error updating user. Please try again.")}else console.log("No user provided to updateUser function")},deleteUser:async e=>{if(confirm("Are you sure you want to delete this user?"))try{if((await M.deleteUser(e.id)).status){const a=c.value.findIndex((a=>a.id===e.id));-1!==a&&c.value.splice(a,1),alert("User deleted successfully")}}catch(e){console.error("Error deleting user:",e),alert("Error deleting user. Please try again.")}},fetchUsers:W,fetchVehicles:q,fetchDevices:B}}}).mount("#app");